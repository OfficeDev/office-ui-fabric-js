<h1 id="list">List</h1>
<p>Presents a number of related items, either as a vertical list or in a grid.</p>
<h2 id="variants">Variants</h2>
<h3 id="default">Default</h3>
<p>A standard vertical list of items.</p>

{{> ListElem props=ListModels.basic }}

<h2 id="states">States</h2>
<p>This component has only the default state.</p>
<h2 id="using-this-component">Using this component</h2>
<ol>
    <li>Confirm that you have references to Fabric&#39;s CSS and JavaScript on your page:<pre><code> &lt;head&gt;
     &lt;link rel=&quot;stylesheet&quot; href=&quot;fabric.min.css&quot;&gt;
     &lt;link rel=&quot;stylesheet&quot; href=&quot;fabric.components.min.css&quot;&gt;
     &lt;script src=&quot;fabric.min.js&quot;&gt;&lt;/script&gt;
 &lt;/head&gt;
</code></pre></li>
    <li>Copy the HTML from the sample above into your page. For example:
        <pre>
 <code>
{{renderPartialPre "List" "ListElem" ListModels.basic false}}
 </code>
</pre>
    </li>
    <li>Add the following <code>&lt;script&gt;</code> tag to your page, below the references to Fabric&#39;s JS, to instantiate all ListItem components on the page:
        <pre>
 <code>
{{renderPartialPre "List" "ListJS" "" false}}
 </code>
</pre>
    </li>
    <li>Replace the content with whatever you&#39;d like to display as a list. The samples use <code>.ms-ListItem</code> components, but you can place any content within <code>.ms-List</code>.</li>
</ol>
<h2 id="dependencies">Dependencies</h2>
<p>This component has no dependencies on other components, although it does often contain ListItem components.</p>
<h2 id="accessibility">Accessibility</h2>
<p>You can use a <code>ul</code> element if your content is unordered, or <code>ol</code> if the order of the content is important.</p>

{{> ListJS }}